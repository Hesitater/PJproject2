<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pj.mapper.user.UserMapper">
	<insert id="insert">
		INSERT INTO 
		User(name,nickName,email,password,address,social,admin)
		VALUES(#{name},#{nickName},#{email},#{password},#{address},#{social},#{admin})
	</insert>
	
	<select id="getUserInfo" resultType="string">
		SELECT 
			title
		FROM 
			checkDB
		WHERE
			id = 1
	</select>
	<select id="getUserList" resultType="com.pj.domain.user.UserVO">
		SELECT
			id,name,email,password,created
		FROM 
			User
		ORDER BY id DESC
		LIMIT #{start}, #{end}
	</select>
	<select id="getFoodList" resultType="com.pj.domain.user.food.UserFoodVO">
		SELECT 
			f.id,f.title,u.name,f.inserted
		FROM 
			Food f
		JOIN 
			User u
		ON 
			f.memberId = u.id
		ORDER BY id DESC
		LIMIT #{start}, #{end}
	</select>
	<select id="getResellList" resultType="com.pj.domain.user.resell.UserResellVO">
		SELECT
			r.id,r.title,u.name,r.price,r.updated
		FROM
		 	ResellBoard r
		 JOIN 
		 	User u
		 ON 
		 	r.memberId = u.id
		ORDER BY r.id DESC
		LIMIT #{start}, #{end}
	</select>
	<select id="getUserEmail" resultType="com.pj.domain.user.UserVO">
		SELECT 
			* 
		FROM 
			User
		WHERE
			email = #{email}
	</select>
	<select id="checkEmail" resultType="com.pj.domain.user.UserVO">
		SELECT 
			email
		FROM
			User
		WHERE
			email = #{email}
	</select>
	<select id="getUserCountRows" resultType="int">
		SELECT 
			count(id)
		FROM
			User
	</select>
	<select id="getFoodCountRows" resultType="int">
		SELECT 
			count(id)
		FROM
			Food
	</select>
	<select id="getResellCountRows" resultType="int">
		SELECT 
			count(id)
		FROM
			ResellBoard
	</select>
	<select id="getFoodListByUserId" resultType="com.pj.domain.user.food.UserFoodVO">
		SELECT 
			f.id,f.title,u.name,f.inserted
		FROM 
			Food f
		JOIN 
			User u
		ON 
			f.memberId = u.id
		AND
			u.id = #{id}
	</select>
	<select id="getResllListByUserId" resultType="com.pj.domain.user.resell.UserResellVO">
		SELECT
			r.id,r.title,u.name,r.price,r.updated
		FROM
		 	ResellBoard r
		 JOIN 
		 	User u
		 ON 
		 	r.memberId = u.id
		 AND
		 	u.id =	#{id}
	</select>
	<select id="selectCount" resultType="int">
		SELECT
		 	count(id)
		FROM
			${boardName}
		WHERE
			${columnName} = #{id}
	</select>
	
	<update id="update">
		UPDATE 
			User
		SET
			name=#{name},
			nickName=#{nickName},
			email=#{email},
			password=#{password},
			address=#{address},
			updated = NOW()
		WHERE
			id = #{id}
	</update>
	
	<delete id="deleteUserEmail">
		DELETE
		FROM
			User
		WHERE
			email = #{emailInfo}
	</delete>
	<delete id="deleteUserByUserId">
		DELETE
		FROM
			User
		WHERE
			id =#{id}
	</delete>
	<delete id="deleteFoodByFoodId">
		DELETE
		FROM
			Food
		WHERE
			id =#{id}
	</delete>
	<delete id="deleteResellByResellId">
		DELETE
		FROM
			ResellBoard
		WHERE
			id =#{id}
	</delete>
	<delete id="deleteReplyByUserId">
		DELETE 
			f,r 
		FROM 
			FoodReply f 
		JOIN 
			rReply r 
		WHERE 
			f.userId = #{id} 
		AND r.userId = #{id}
	</delete>
	<delete id="deleteBoardByUserId">
		DELETE 
			f,r 
		FROM 
			Food f 
		JOIN 
			ResellBoard r 
		WHERE 
			f.memberId = #{id} 
		AND r.memberId = #{id}; 
	</delete>
	<delete id="deleteFoodByUserId">
		DELETE
		FROM 
			Food
		WHERE 
			memberId = #{id}
	</delete>
	<delete id="deleteResellByUserId">
		DELETE
		FROM 
			ResellBoard
		WHERE 
			memberId = #{id}
	</delete>
	<delete id="deleteFoodReplyByFoodId">
		DELETE
		FROM
			FoodReply
		WHERE
			foodBoardId = #{id}
	</delete>
	<delete id="deleteResellReplyByResellId">
		DELETE
		FROM
			rReply
		WHERE
			boardId = #{id}
	</delete>
</mapper>